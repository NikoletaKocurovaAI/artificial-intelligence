name: Generative AI Deploy

on:
  workflow_dispatch:

env:
  PYTHON_VERSION: "3.11"
  PACKAGE: "generative_ai"
  PACKAGE_SUFFIX: "app"
  REPOSITORY_NAME: ${{ toLower(github.repository) }}
  BUILD_PATH: "artificial-intelligence/generative_ai"
  REGISTRY: "ghcr.io"
  GCP_CREDENTIALS: secrets.GCP_CREDENTIALS
  GCP_PROJECT_ID: secrets.GCP_PROJECT_ID
  GKE_ZONE: secrets.GKE_ZONE
  GKE_CLUSTER_NAME: secrets.GKE_CLUSTER_NAME

jobs:
  common:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
  build:
    runs-on: ubuntu-latest
    needs: common
    steps:
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Log in to GitHub Container Registry (GHCR)
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Get Build Tag
        run: |
          TAG=$(git describe --tags `git rev-list --tags --max-count=1`)
          echo "BUILD_TAG=$TAG" >> $GITHUB_ENV
        shell: bash
      - name: Build Docker image
        run: |
          echo "Current directory: $(pwd)"          
          echo "Running command docker build -t ${ { env.PACKAGE }}_${{ env.PACKAGE_SUFFIX }}:latest -f ${ { env.BUILD_PATH }}/Dockerfile ."
          docker build -t "${{ env.PACKAGE }}_${{ env.PACKAGE_SUFFIX }}:latest" -f "${{ env.BUILD_PATH }}/Dockerfile" .
          
          echo "Running command docker tag ${{ env.PACKAGE }}_${{ env.PACKAGE_SUFFIX }}:latest ${{ env.REGISTRY}}/${{ env.REPOSITORY_NAME}}/${{ env.PACKAGE}}/${{ env.BUILD_TAG}}"
          docker tag "${{ env.PACKAGE }}_${{ env.PACKAGE_SUFFIX }}:latest" "${{ env.REGISTRY}}/${{ env.REPOSITORY_NAME}}/${{ env.PACKAGE}}/${{ env.BUILD_TAG}}"
      - name: Push Docker image to GHCR
        run: |
          echo "Running command docker push ${{ env.REGISTRY }}/${{ env.REPOSITORY_NAME }}/${{ env.PACKAGE }}:${{ env.BUILD_TAG }}"

  deploy:
    runs-on: ubuntu-latest
    needs: common
    steps:
    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ env.GCP_PROJECT_ID }}
        credentials: ${{ env.GCP_CREDENTIALS }}
        echo "GCP project_id used for testing: $GCP_PROJECT_ID"
        echo "GCP credentials used for testing: $GCP_CREDENTIALS"
    - name: Set up kubectl
      run: |
        echo "Setting up the kubectl"
        echo "Running command gcloud container clusters get-credentials $env.GKE_CLUSTER_NAME --zone env.GKE_ZONE --project env.GCP_PROJECT_ID"
    - name: Deploy to Kubernetes
      run: |
        echo "Applying Kubernetes manifests in namespace RIN"
        echo "Running command kubectl config set-context --current --namespace=rin
        echo "Running command kubectl apply -f deploy/generative_ai/deployment.yaml"
name: Generative AI

on:
  push:
    paths:
      - 'generative_ai/**'
  pull_request:
    paths:
      - 'generative_ai/**'

env:
  PYTHON_VERSION: "3.11"
  BLACK_VERSION: "22.12.0"
  FLAKE_VERSION: "7.1.1"
  MYPY_VERSION: "1.13.0"
  TOX_VERSION: "4.23.2"
  PACKAGE: "generative_ai"
  PACKAGE_SUFFIX: "app"
  REPOSITORY_NAME: "artificial-intelligence"
  BUILD_TAG: "dev-0-0-1"
  REGISTRY: "ghcr.io"
  OPENAI_API_KEY: ${{ secrets.OPEN_AI_API_KEY }}
  CI_COMMIT_SHA: ${{ github.sha }}

jobs:
  common:
    runs-on: ubuntu-latest
    outputs:
      repository_path: ${{ steps.checkout.outputs.repo }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Debug repository structure
        run: |
          echo "Repository directory structure after checkout:"
          ls -R /home/runner/work/artificial-intelligence/artificial-intelligence

  static-analysis:
    runs-on: ubuntu-latest
    needs: common
    steps:
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install black==${{ env.BLACK_VERSION }} flake8==${{ env.FLAKE_VERSION }} mypy==${{ env.MYPY_VERSION }}

      - name: Debug repository structure
        run: |
          echo "Repository directory:"
          ls -R /home/runner/work/artificial-intelligence/artificial-intelligence

      - name: Formatter
        run: |
          echo "Current directory: $(pwd)"
          
          echo "Listing current directory:"
          ls -la

          echo "Listing current directory:"
          ls -R $(pwd)
    
          echo "Running command black $(pwd)/${{ env.PACKAGE }}"
          black "$(pwd)/${{ env.PACKAGE }}"

      - name: Type Checker
        run: |
          echo "Current directory: $(pwd)"
          mypy ${{ env.PACKAGE }}

      - name: Linter
        run: |
          echo "Current directory: $(pwd)"
          flake8 ${{ env.PACKAGE }}

  unit-tests:
    runs-on: ubuntu-latest
    needs: common
    steps:
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox==${{ env.TOX_VERSION }}

      - name: Test articles
        run: |
          cd ${{ env.PACKAGE }}
          echo "Current directory: $(pwd)"
          tox -c tox.ini -e test_articles

  integration-tests:
    runs-on: ubuntu-latest
    needs: common
    steps:
      - name: Test integration articles
        run: |
          echo "Hello World"

  build:
    runs-on: ubuntu-latest
    needs: common
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry (GHCR)
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker image
        run: |
          echo "Current directory: $(pwd)"
          
          DOCKER_BUILD_CMD="docker build -t ${{ env.PACKAGE }}_${{ env.PACKAGE_SUFFIX }}:latest -f ${{ env.REPOSITORY_NAME }}/${{ env.PACKAGE }}/Dockerfile ."
          echo "Running command: $DOCKER_BUILD_CMD"
          $DOCKER_BUILD_CMD

          DOCKER_TAG_CMD="docker tag ${ { env.PACKAGE }}_${{ env.PACKAGE_SUFFIX }}:latest ${ { env.REGISTRY}}/${{ env.REPOSITORY_NAME}}/${{ env.PACKAGE}}/${{ env.BUILD_TAG}}"
          echo "Running command: $DOCKER_TAG_CMD"
          $DOCKER_TAG_CMD

      - name: Push Docker image to GHCR
        run: |
          echo "Running command docker push ${{ env.REGISTRY }}/${{ env.REPOSITORY_NAME }}/${{ env.PACKAGE }}:${{ env.BUILD_TAG }}"
